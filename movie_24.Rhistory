data$result[data$result == "teardrop."] = "dos"
data$result[data$result == "ftp_write."] = "r2l"
data$result[data$result == "guess_passwd."] = "r2l"
data$result[data$result == "imap."] = "r2l"
data$result[data$result == "multihop."] = "r2l"
data$result[data$result == "phf."] = "r2l"
data$result[data$result == "spy."] = "r2l"
data$result[data$result == "warezclient."] = "r2l"
data$result[data$result == "warezmaster."] = "r2l"
data$result[data$result == "normal."] = "normal"
data$result = as.factor(data$result)
```
data$result = as.character(data$result)
data$result[data$result == "ipsweep."] = "probe"
data$result[data$result == "portsweep."] = "probe"
data$result[data$result == "nmap."] = "probe"
data$result[data$result == "satan."] = "probe"
data$result[data$result == "buffer_overflow."] = "u2r"
data$result[data$result == "loadmodule."] = "u2r"
data$result[data$result == "perl."] = "u2r"
data$result[data$result == "rootkit."] = "u2r"
data$result[data$result == "back."] = "dos"
data$result[data$result == "land."] = "dos"
data$result[data$result == "neptune."] = "dos"
data$result[data$result == "pod."] = "dos"
data$result[data$result == "smurf."] = "dos"
data$result[data$result == "teardrop."] = "dos"
data$result[data$result == "ftp_write."] = "r2l"
data$result[data$result == "guess_passwd."] = "r2l"
data$result[data$result == "imap."] = "r2l"
data$result[data$result == "multihop."] = "r2l"
data$result[data$result == "phf."] = "r2l"
data$result[data$result == "spy."] = "r2l"
data$result[data$result == "warezclient."] = "r2l"
data$result[data$result == "warezmaster."] = "r2l"
data$result[data$result == "normal."] = "normal"
data$result = as.factor(data$result)
```{r correlation, echo=TRUE}
library(corrplot)
data2 <- data[,5:41]
colnames(data2) <- NULL
correlation <- cor(data2)
corrplot(correlation, method="circle", na.label= '.')
```
library(corrplot)
data2 <- data[5:41,]
colnames(data2) <- NULL
correlation <- cor(data2)
corrplot(correlation, method="circle", na.label= '.')
library(corrplot)
data2 <- data[5:41]
colnames(data2) <- NULL
correlation <- cor(data2)
corrplot(correlation, method="circle", na.label= '.')
qplot(dst_host_same_src_port_rate,dst_host_srv_diff_host_rate,colour=result,data=data)
qplot(service,flag,colour=result,data=data)
qplot(duration,src_bytes,colour=result,data=data)
A=table(data$flag,data$result)
round(prop.table(A)*100,1)
library(randomForest)
control <- rfeControl(functions=rfFuncs, method="cv", number=10)
data1<-data[,c("srv_rerror_rate",   "rerror_rate", "flag","dst_host_rerror_rate" ,
"logged_in" ,"dst_bytes","src_bytes","num_compromised" ,
"dst_host_srv_count","duration" ,"dst_host_same_src_port_rate","dst_host_diff_srv_rate" ,
"dst_host_count","dst_host_srv_serror_rate","count","hot" ,
"dst_host_same_srv_rate","dst_host_srv_diff_host_rate" ,"dst_host_serror_rate" ,"serror_rate",
"srv_serror_rate" ,"diff_srv_rate","srv_count","srv_diff_host_rate","protocol_type","result" )]
inTrain <- createDataPartition(y=data1$result,p=0.02, list=FALSE)
training <- data1[inTrain,]
testing <- data1[-inTrain,]
dim(training)
modFit <- train(result ~ .,method="rf",data=training)
modFit
modFit <- train(result ~ .,method="rf",data=training)
modFit <- train(result ~ .,method="rf",data=training)
modFit
getTree(modFit$finalModel,k=2)
modFit <- train(result ~ .,data=training,method="rf",prox=TRUE)
library(corrplot)
data2 <- data[,5:41]
data2
colnames(data2) <- NULL
colnames(data2)
data2
correlation <- cor(data2)
View(data2)
View(data2)
data2 <- data[,5:41]
data2
correlation <- cor(data2)
View(data2)
View(data2)
View(data)
View(data)
correlation <- cor(data2,use="complete.obs",method = "pearson")
sapply(data2, is.numeric)
my_num_data <- data2[, sapply(data2, is.numeric)]
my_num_data
View(data)
View(data)
View(data)
setwd("F://Rsoftware/New")
getwd()
d1 <- ggplot(data = movies, aes(y = imdb_rating, x = critics_score, colour = critics_rating)) + geom_point()
d2 <- ggplot(data = movies, aes(y = imdb_rating, x = critics_score, colour = audience_rating)) + geom_point()
grid.arrange(d1, d2, nrow = 1, ncol = 2)
library(ggplot2)
d1 <- ggplot(data = movies, aes(y = imdb_rating, x = critics_score, colour = critics_rating)) + geom_point()
d2 <- ggplot(data = movies, aes(y = imdb_rating, x = critics_score, colour = audience_rating)) + geom_point()
grid.arrange(d1, d2, nrow = 1, ncol = 2)
library(ggplot2)
library(dplyr)
library(caret)
library(statsr)
library(gridExtra)
library(GGally)
library(ggthemes)
d1 <- ggplot(data = movies, aes(y = imdb_rating, x = critics_score, colour = critics_rating)) + geom_point()
d2 <- ggplot(data = movies, aes(y = imdb_rating, x = critics_score, colour = audience_rating)) + geom_point()
grid.arrange(d1, d2, nrow = 1, ncol = 2)
p1 <- ggplot(data = movies, aes(x = imdb_rating)) + geom_histogram(colour = "black", fill = "skyblue", binwidth = .3)
p2 <- ggplot(data = movies, aes(x = imdb_num_votes)) + geom_histogram(colour = "black", fill = "salmon", binwidth = 40000, alpha = 0.5)
p3 <- ggplot(data = movies, aes(x = critics_score)) + geom_histogram(colour = "black", fill = "cyan", binwidth = 5, alpha = 0.5)
p4 <- ggplot(data = movies, aes(x = audience_score)) + geom_histogram(colour = "black", fill = "yellow", binwidth = 5, alpha = 0.7)
grid.arrange(p1, p2, p3, p4, nrow = 1, ncol = 4)
setwd("F://Rsoftware/DataSet's/Crime/SET")
getwd()
crimeData<-read.csv("01_District_wise_crimes_committed_IPC_2001_2012.csv")
crimeData
View(crimeData)
View(crimeData)
p1 <- ggplot(data = crimeData, aes(x = DACOITY)) + geom_histogram(colour = "black", fill = "skyblue", binwidth = .3)
p2 <- ggplot(data = crimeData, aes(x = MURDER)) + geom_histogram(colour = "black", fill = "salmon", binwidth = 40000, alpha = 0.5)
p3 <- ggplot(data = crimeData, aes(x = ATTEMPT TO MURDER)) + geom_histogram(colour = "black", fill = "cyan", binwidth = 5, alpha = 0.5)
p4 <- ggplot(data = crimeData, aes(x =RAPE )) + geom_histogram(colour = "black", fill = "yellow", binwidth = 5, alpha = 0.7)
grid.arrange(p1, p2, p3, p4, nrow = 1, ncol = 4)
library(ggplot2)
p1 <- ggplot(data = crimeData, aes(x = DACOITY)) + geom_histogram(colour = "black", fill = "skyblue", binwidth = .3)
p2 <- ggplot(data = crimeData, aes(x = MURDER)) + geom_histogram(colour = "black", fill = "salmon", binwidth = 40000, alpha = 0.5)
p3 <- ggplot(data = crimeData, aes(x = ATTEMPT TO MURDER)) + geom_histogram(colour = "black", fill = "cyan", binwidth = 5, alpha = 0.5)
p4 <- ggplot(data = crimeData, aes(x =RAPE )) + geom_histogram(colour = "black", fill = "yellow", binwidth = 5, alpha = 0.7)
grid.arrange(p1, p2, p3, p4, nrow = 1, ncol = 4)
library(ggplot2)
library(dplyr)
library(caret)
library(statsr)
library(gridExtra)
library(GGally)
library(ggthemes)
p1 <- ggplot(data = crimeData, aes(x = DACOITY)) + geom_histogram(colour = "black", fill = "skyblue", binwidth = .3)
p2 <- ggplot(data = crimeData, aes(x = MURDER)) + geom_histogram(colour = "black", fill = "salmon", binwidth = 40000, alpha = 0.5)
p3 <- ggplot(data = crimeData, aes(x = ATTEMPT TO MURDER)) + geom_histogram(colour = "black", fill = "cyan", binwidth = 5, alpha = 0.5)
p4 <- ggplot(data = crimeData, aes(x =RAPE )) + geom_histogram(colour = "black", fill = "yellow", binwidth = 5, alpha = 0.7)
grid.arrange(p1, p2, p3, p4, nrow = 1, ncol = 4)
p1 <- ggplot(data = crimeData, aes(x = DACOITY)) + geom_histogram(colour = "black", fill = "skyblue", binwidth = .3)
p2 <- ggplot(data = crimeData, aes(x = MURDER)) + geom_histogram(colour = "black", fill = "salmon", binwidth = 40000, alpha = 0.5)
p3 <- ggplot(data = crimeData, aes(x = ATTEMPT.TO.MURDER)) + geom_histogram(colour = "black", fill = "cyan", binwidth = 5, alpha = 0.5)
p4 <- ggplot(data = crimeData, aes(x =RAPE )) + geom_histogram(colour = "black", fill = "yellow", binwidth = 5, alpha = 0.7)
grid.arrange(p1, p2, p3, p4, nrow = 1, ncol = 4)
d1 <- ggplot(data = training, aes(y = imdb_rating, x = critics_score, colour = critics_rating)) + geom_point()
d2 <- ggplot(data = training, aes(y = imdb_rating, x = critics_score, colour = audience_rating)) + geom_point()
grid.arrange(d1, d2, nrow = 1, ncol = 2)
View(training)
View(training)
heatmap(as.matrix(crimeData))
max_rape<-max(crimeData$RAPE)
max_rape
max_murder<-max(crimeData$MURDER)
max_murder
plot(crimeData$RAPE,crimeData$MURDER,type = "p",xlim = c(0,max_rape),ylim = c(0,max_murder),main = "MURDER vs RAPE",xlab = "Rape",ylab = "Murder")
plot(crimeData$RAPE,crimeData$MURDER,type = "n",xlim = c(0,max_rape),ylim = c(0,max_murder),main = "MURDER vs RAPE",xlab = "Rape",ylab = "Murder")
plot(crimeData$RAPE,crimeData$MURDER,type = "s",xlim = c(0,max_rape),ylim = c(0,max_murder),main = "MURDER vs RAPE",xlab = "Rape",ylab = "Murder")
plot(crimeData$RAPE,crimeData$MURDER,type = "p",xlim = c(0,max_rape),ylim = c(0,max_murder),main = "MURDER vs RAPE",xlab = "Rape",ylab = "Murder",col=c("red","blue"))
counts<-table(crimeData$YEAR)
counts
barplot(counts,main = "Crime per Year",xlab = "Years",ylab = "Count",legend=rownames(counts),col = c("red","green","blue","yellow","black","orange","violet","skyblue"))
barplot(counts,main = "Crime per Year",xlab = "Years",ylab = "Count",col = c("red","green","blue","yellow","black","orange","violet","skyblue"))
slice<-c(crimeData$MURDER,crimeData$RAPE,crimeData$KIDNAPPING.AND.ABDUCTION.OF.WOMEN.AND.GIRLS,crimeData$DACOITY,crimeData$CRUELTY.BY.HUSBAND.OR.HIS.RELATIVES,crimeData$ROBBERY,crimeData$KIDNAPPING...ABDUCTION)
lbls<-c("Murder","Rape","Kidnaping and abuction of women and girls","Dacoity","Cruelty by husband and his relative","Robbery","Kidnapping and Abduction")
pie(slice,labels=lbls,col = rainbow(length(lbls)))
sum_rape<-sum(crimeData$RAPE)
sum_rape
sum_murder<-sum(crimeData$MURDER)
sum_murder
sum_KABOWC<-sum(crimeData$KIDNAPPING.AND.ABDUCTION.OF.WOMEN.AND.GIRLS)
sum_KABOWC
sum_dacoity<-sum(crimeData$DACOITY)
sum_dacoity
sum_CBHAHR<-sum(crimeData$CRUELTY.BY.HUSBAND.OR.HIS.RELATIVES)
sum_CBHAHR
sum_robbery<-sum(crimeData$ROBBERY)
sum_robbery
sum_KAA<-sum(crimeData$KIDNAPPING...ABDUCTION)
sum_KAA
sum_roits<-sum(crimeData$RIOTS)
sum_roits
slice<-c(crimeData$MURDER,crimeData$RAPE,crimeData$KIDNAPPING.AND.ABDUCTION.OF.WOMEN.AND.GIRLS,crimeData$DACOITY,crimeData$CRUELTY.BY.HUSBAND.OR.HIS.RELATIVES,crimeData$ROBBERY,crimeData$KIDNAPPING...ABDUCTION,crimeData$RIOTS)
slice<-c(sum_rape,sum_murder,sum_KABOWC,sum_dacoity,sum_CBHAHR,sum_robbery,sum_KAA,sum_roits)
slice
lbls<-c("RAPE","MURDER","KABOWC","DACOITY","CBHAHR","ROBBERY","KAA","ROITS")
length(lbls)
pie(slice,labels = lbls,col = rainbow(length(lbls)))
pie(slice,labels = lbls,col = rainbow(length(lbls)),main = "Pie Chart of different crimes during 2001-2012")
boxplot(crimeData$THEFT~crimeData$CHEATING)
boxplot(crimeData$THEFT)
boxplot(crimeData$THEFT)
p_genreimdb <- ggplot(crimeData, aes(x=factor(STATE.UT), y=ASSAULT.ON.WOMEN.WITH.INTENT.TO.OUTRAGE.HER.MODESTY)) +
geom_boxplot() + theme(axis.text.x = element_text(angle = 45, hjust = 1))
p_genreimdb + ggtitle("State wise crime on women") + geom_hline(yintercept =median(crimeData$ASSAULT.ON.WOMEN.WITH.INTENT.TO.OUTRAGE.HER.MODESTY, na.rm = TRUE), col = "royalblue",lwd = 1)
p_genreimdb <- ggplot(crimeData, aes(x=factor(STATE.UT), y=RAPE)) +
geom_boxplot() + theme(axis.text.x = element_text(angle = 45, hjust = 1))
p_genreimdb + ggtitle("State wise rape data") + geom_hline(yintercept =median(crimeData$RAPE, na.rm = TRUE), col = "royalblue",lwd = 1)
plot(crimeData$MURDER,crimeData$ATTEMPT.TO.MURDER, main="Murder vs Attempt to murder", xlab = "MURDER", ylab="ATTEMPT TO MURDER")
abline(lm(crimeData$ATTEMPT.TO.MURDER~crimeData$MURDER),col = "royalblue",lwd = 1)
plot(crimeData$MURDER,crimeData$ATTEMPT.TO.MURDER, main="Murder vs Attempt to murder", xlab = "MURDER", ylab="ATTEMPT TO MURDER",col=c("red","blue"))
abline(lm(crimeData$ATTEMPT.TO.MURDER~crimeData$MURDER),col = "royalblue",lwd = 1)
d1 <- ggplot(data = crimeData, aes(y = MURDER, x = ATTEMPT.TO.MURDER, col=c("red","blue"))) + geom_point()
d2 <- ggplot(data = crimeData, aes(y = RAPE, x = CUSTODIAL.RAPE, col=c("green","orange"))) + geom_point() d3<-ggplot(data = crimeData,aes(y=KIDNAPPING...ABDUCTION,x=KIDNAPPING.AND.ABDUCTION.OF.WOMEN.AND.GIRLS,col=c("black","red")))+geom_point() d4<-ggplot(data = crimeData,aes(y=DACOITY,x=PREPARATION.AND.ASSEMBLY.FOR.DACOITY,col=c("orange","blue")))+geom_point()
grid.arrange(d1, d2,d3,d4, nrow = 2, ncol = 2)
d1 <- ggplot(data = crimeData, aes(y = MURDER, x = ATTEMPT.TO.MURDER, col=c("red","blue"))) + geom_point()
d2 <- ggplot(data = crimeData, aes(y = RAPE, x = CUSTODIAL.RAPE, col=c("green","orange"))) + geom_point()
d3<-ggplot(data = crimeData,aes(y=KIDNAPPING...ABDUCTION,x=KIDNAPPING.AND.ABDUCTION.OF.WOMEN.AND.GIRLS,col=c("black","red")))+geom_point()
d4<-ggplot(data = crimeData,aes(y=DACOITY,x=PREPARATION.AND.ASSEMBLY.FOR.DACOITY,col=c("orange","blue")))+geom_point()
grid.arrange(d1, d2,d3,d4, nrow = 2, ncol = 2)
d1 <- ggplot(data = crimeData, aes(y = MURDER, x = ATTEMPT.TO.MURDER, col=c("red","blue"))) + geom_point()
d2 <- ggplot(data = crimeData, aes(y = RAPE, x = CUSTODIAL.RAPE, col=c("green","orange"))) + geom_point()
grid.arrange(d1, d2, nrow = 1, ncol = 2)
d1 <- ggplot(data = crimeData, aes(y = MURDER, x = ATTEMPT.TO.MURDER, colour=COUNTERFIETING) + geom_point()
54
d1 <- ggplot(data = crimeData, aes(y = MURDER, x = ATTEMPT.TO.MURDER, colour=COUNTERFIETING) + geom_point()
d2 <- ggplot(data = crimeData, aes(y = RAPE, x = CUSTODIAL.RAPE, colour=COUNTERFIETING) + geom_point()
d1 <- ggplot(data = crimeData, aes(y = MURDER, x = ATTEMPT.TO.MURDER, colour=COUNTERFIETING) + geom_point()
d2 <- ggplot(data = crimeData, aes(y = RAPE, x = CUSTODIAL.RAPE, colour=COUNTERFIETING) + geom_point()
d1 <- ggplot(data = crimeData, aes(y = MURDER, x = ATTEMPT.TO.MURDER,colour=COUNTERFIETING )) + geom_point()
d2 <- ggplot(data = crimeData, aes(y = RAPE, x = CUSTODIAL.RAPE, colour=COUNTERFIETING)) + geom_point()
grid.arrange(d1, d2, nrow = 1, ncol = 2)
d3<-ggplot(data = crimeData,aes(y=KIDNAPPING...ABDUCTION,x=KIDNAPPING.AND.ABDUCTION.OF.WOMEN.AND.GIRLS,colour=COUNTERFIETING)+geom_point()
d4<-ggplot(data = crimeData,aes(y=DACOITY,x=PREPARATION.AND.ASSEMBLY.FOR.DACOITY,colour=COUNTERFIETING))+geom_point()
grid.arrange(d3,d4, nrow = 1, ncol = 2)
d3<-ggplot(data = crimeData,aes(y=KIDNAPPING...ABDUCTION,x=KIDNAPPING.AND.ABDUCTION.OF.WOMEN.AND.GIRLS,colour=COUNTERFIETING)+geom_point()
1
d3<-ggplot(data = crimeData,aes(y=KIDNAPPING...ABDUCTION,x=KIDNAPPING.AND.ABDUCTION.OF.WOMEN.AND.GIRLS,colour=COUNTERFIETING)+geom_point()
8
d3<-ggplot(data = crimeData,aes(y=KIDNAPPING...ABDUCTION,x=KIDNAPPING.AND.ABDUCTION.OF.WOMEN.AND.GIRLS,colour=COUNTERFIETING))+geom_point()
> d4<-ggplot(data = crimeData,aes(y=DACOITY,x=PREPARATION.AND.ASSEMBLY.FOR.DACOITY,colour=COUNTERFIETING))+geom_point()
d3<-ggplot(data = crimeData,aes(y=KIDNAPPING...ABDUCTION,x=KIDNAPPING.AND.ABDUCTION.OF.WOMEN.AND.GIRLS,colour=COUNTERFIETING))+geom_point()
d4<-ggplot(data = crimeData,aes(y=DACOITY,x=PREPARATION.AND.ASSEMBLY.FOR.DACOITY,colour=COUNTERFIETING))+geom_point()
grid.arrange(d3,d4, nrow = 1, ncol = 2)
View(data3)
g1 <- ggplot(data = crimeData, aes(x = CRIMINAL.BREACH.OF.TRUST)) + geom_histogram(colour = "black", fill = "orange", alpha = 0.5)
g1
heatmap(as.matrix(crimeData),Rowv = NA,Colv = NA,scale="column",col=cm.colors(256),xlab = "Attributes",main = "Heatmap")
heatmap(as.matrix(crimeData$CRIMINAL.BREACH.OF.TRUST),Rowv = NA,Colv = NA,scale="column",col=cm.colors(256),xlab = "Criminal breach of trust",main = "Heatmap")
heatmap(as.matrix(crimeData$CRIMINAL.BREACH.OF.TRUST,crimeData$DOWRY.DEATHS),Rowv = NA,Colv = NA,scale="column",col=cm.colors(256),xlab = "Criminal breach of trust",main = "Heatmap")
cdata<-c(crimeData$CRIMINAL.BREACH.OF.TRUST,crimeData$DOWRY.DEATHS)
cdata
g1 <- ggplot(data = crimeData, aes(x =DOWRY.DEATHS)) + geom_histogram(colour = "black", fill = "orange", alpha = 0.5)
g1 <- ggplot(data = crimeData, aes(x =crimeData$MURDER)) + geom_histogram(colour = "black", fill = "orange", alpha = 0.5)
g1 <- ggplot(data = crimeData, aes(x =MURDER)) + geom_histogram(colour = "black", fill = "orange", alpha = 0.5)
g1
library(Commander)
install.packages("Commander")
library(lattice)
mtcars
cloud(RAPE~DOWRY.DEATHS * INSULT.TO.MODESTY.OF.WOMEN,col=rainbow(length(YEAR)),pch=17)
cloud(RAPE~DOWRY.DEATHS * INSULT.TO.MODESTY.OF.WOMEN,data=crimeData,col=rainbow(length(YEAR)),pch=17)
cloud(RAPE~DOWRY.DEATHS * INSULT.TO.MODESTY.OF.WOMEN,data=crimeData,col=cm.colors(256),pch=17)
cloud(RAPE~DOWRY.DEATHS * INSULT.TO.MODESTY.OF.WOMEN,data=crimeData,col=c("red","blue","green"),pch=17)
cloud(RAPE~DOWRY.DEATHS * INSULT.TO.MODESTY.OF.WOMEN,data=crimeData,col=c("red","blue","green"),pch=17,main="3D Scatter Plot to show the occurance of crime against women")
library(plotly)
plot_ly(crimeData,x=~RAPE,y=~DOWRY.DEATHS,z=~INSULT.TO.MODESTY.OF.WOMEN)
plot_ly(crimeData,x=~RAPE,y=~DOWRY.DEATHS,z=~INSULT.TO.MODESTY.OF.WOMEN,colors = c("green","orange","black"))
plot_ly(z=~crimeData$MURDER,type = "surface")
plot_ly(z=~crimeData$MURDER,type = "surface",pch=17)
heatmap(as.matrix(crimeData),Rowv = NA,Colv = NA,scale = "column",col=cm.colors(256),xlab = "Attributes",main = "HeatMap")
heatmap(as.matrix(mtcars),Rowv = NA,Colv = NA,scale = "column",col=cm.colors(256),xlab = "Attributes",main = "HeatMap")
heatmap(as.matrix(mtcars),Rowv = NA,Colv = NA,scale = "column",col=rainbow(7),xlab = "Attributes",main = "HeatMap")
heatmap(as.matrix(mtcars),Rowv = NA,Colv = NA,scale = "column",col=rainbow(15),xlab = "Attributes",main = "HeatMap")
heatmap(as.matrix(mtcars),Rowv = NA,Colv = NA,scale = "column",col=rainbow(25),xlab = "Attributes",main = "HeatMap")
df11<-crimeData[,5:25]
df11
df12<-crimeData[,30]
df12
df12<-crimeData[,5:30]
df12
heatmap(as.matrix(df12),Rowv = NA,Colv = NA,scale = "column",col=rainbow(25),xlab = "Attributes",main = "HeatMap")
heatmap(as.matrix(df12),Rowv = NA,Colv = NA,scale = "column",col=rainbow(25),xlab = "Attributes",main = "HeatMap")
heatmap(as.matrix(df12),Rowv = NA,Colv = NA,scale = "column",col=rainbow(7),xlab = "Attributes",main = "HeatMap")
heatmap(as.matrix(df12),Rowv = NA,Colv = NA,scale = "column",col=cm.colors(256),xlab = "Attributes",main = "HeatMap")
heatmap(as.matrix(df12),Rowv = NA,Colv = NA,scale = "column",col=cm.colors(25),xlab = "Attributes",main = "HeatMap")
heatmap(as.matrix(mtcars),Rowv = NA,Colv = NA,scale = "column",col=rainbow(25),xlab = "Attributes",main = "HeatMap")
mtcars
max(crimeData$ROBBERY)
min(crimeData$DACOITY)
median(crimeData$DACOITY,na.rm = FALSE)
save.image("F:/Rsoftware/DataSet's/Crime/SET/crimeset.RData")
savehistory("F:/Rsoftware/DataSet's/Crime/SET/crimeset1.Rhistory")
setwd("F://Rsoftware/NEW")
getwd()
library(ggplot2)
library(dplyr)
library(caret)
library(statsr)
library(gridExtra)
library(GGally)
library(ggthemes)
load("movies.Rdata")
set.seed(3974)
inTrain <- createDataPartition(y=movies$imdb_rating, p=0.994, list=FALSE)
training <- movies[inTrain,]
testing <- movies[-inTrain,]
dim(training)
dim(testing)
quantile(training$imdb_num_votes, c(0, 0.25, 0.5, 0.75, 0.9, 1))
d1 <- ggplot(data = training, aes(y = imdb_rating, x = critics_score, colour = critics_rating)) + geom_point()
d2 <- ggplot(data = training, aes(y = imdb_rating, x = critics_score, colour = audience_rating)) + geom_point()
grid.arrange(d1, d2, nrow = 1, ncol = 2)
View(movies)
dim(testing)
#Dimention of training and Testing Dataset
dim(training)
library(statsr)
library(gridExtra)
library(GGally)
library(ggthemes)
#Loading Data
load("movies.Rdata")
#Generating Training and Testing Dataset
set.seed(3974)
inTrain <- createDataPartition(y=movies$imdb_rating, p=0.994, list=FALSE)
training <- movies[inTrain,]
testing <- movies[-inTrain,]
#Dimention of training and Testing Dataset
dim(training)
dim(testing)
library(knitr)
minv <- training %>% select(imdb_rating, imdb_num_votes, critics_score, audience_score) %>% sapply(min) %>% sapply(round,2)
maxv <- training %>% select(imdb_rating, imdb_num_votes, critics_score, audience_score) %>% sapply(max) %>% sapply(round,2)
meanv <- training %>% select(imdb_rating, imdb_num_votes, critics_score, audience_score) %>% sapply(mean) %>% sapply(round,2)
medianv <- training %>% select(imdb_rating, imdb_num_votes, critics_score, audience_score) %>% sapply(median) %>% sapply(round,2)
df <- rbind(minv, maxv, meanv, medianv)
rownames(df) <- c("min", "max", "mean", "median")
kable(df)
nom <- table(flm2$best_pic_nom)
win <- table(flm2$best_pic_win)
flm2 <- flm2 %>% mutate(oscar_nom_win = ifelse(best_pic_nom == "yes" | best_pic_win == "yes", "yes", "no"))
nom_win <- table(flm2$oscar_nom_win)
comb_nom_win <- rbind(nom_win, nom, win)
rownames(comb_nom_win) <- c("combined", "nominations", "wins")
comb_nom_win
#Packages loading
library(ggplot2)
library(dplyr)
library(caret)
library(statsr)
library(gridExtra)
library(GGally)
library(ggthemes)
#Loading Data
load("movies.Rdata")
#Packages loading
library(ggplot2)
library(dplyr)
library(caret)
library(statsr)
library(gridExtra)
library(GGally)
library(ggthemes)
#Loading Data
load("movies.Rdata")
#Generating Training and Testing Dataset
set.seed(3974)
inTrain <- createDataPartition(y=movies$imdb_rating, p=0.994, list=FALSE)
training <- movies[inTrain,]
testing <- movies[-inTrain,]
#Dimention of training and Testing Dataset
dim(training)
dim(testing)
#normal distribution of imdb_num_votes
quantile(training$imdb_num_votes, c(0, 0.25, 0.5, 0.75, 0.9, 1))
#distribution of critics_score and imdb_rating
d1 <- ggplot(data = training, aes(y = imdb_rating, x = critics_score, colour = critics_rating)) + geom_point()
d2 <- ggplot(data = training, aes(y = imdb_rating, x = critics_score, colour = audience_rating)) + geom_point()
grid.arrange(d1, d2, nrow = 1, ncol = 2)
#Finding minimum,maximum,mean and median of imdb_rating, imdb_num_votes, critics_score, audience_score
library(knitr)
minv <- training %>% select(imdb_rating, imdb_num_votes, critics_score, audience_score) %>% sapply(min) %>% sapply(round,2)
maxv <- training %>% select(imdb_rating, imdb_num_votes, critics_score, audience_score) %>% sapply(max) %>% sapply(round,2)
meanv <- training %>% select(imdb_rating, imdb_num_votes, critics_score, audience_score) %>% sapply(mean) %>% sapply(round,2)
medianv <- training %>% select(imdb_rating, imdb_num_votes, critics_score, audience_score) %>% sapply(median) %>% sapply(round,2)
df <- rbind(minv, maxv, meanv, medianv)
rownames(df) <- c("min", "max", "mean", "median")
kable(df)
#Representation of imdb_rating,imdb_num_votes,critics_score and audience_score on histogram
p1 <- ggplot(data = training, aes(x = imdb_rating)) + geom_histogram(colour = "black", fill = "skyblue", binwidth = .3)
p2 <- ggplot(data = training, aes(x = imdb_num_votes)) + geom_histogram(colour = "black", fill = "salmon", binwidth = 40000, alpha = 0.5)
p3 <- ggplot(data = training, aes(x = critics_score)) + geom_histogram(colour = "black", fill = "cyan", binwidth = 5, alpha = 0.5)
p4 <- ggplot(data = training, aes(x = audience_score)) + geom_histogram(colour = "black", fill = "yellow", binwidth = 5, alpha = 0.7)
grid.arrange(p1, p2, p3, p4, nrow = 1, ncol = 4)
#
actr <- table(training$best_actor_win)
acts <- table(training$best_actress_win)
dir <- table(training$best_dir_win)
flm2 <- training %>% mutate(oscar = ifelse(best_actor_win == "yes" | best_actress_win == "yes" | best_dir_win == "yes", "yes", "no"))
osc <- flm2 %>% select(oscar) %>% group_by(oscar) %>% table() %>% rbind(actr, acts, dir)
rownames(osc) <- c("At.least.one.Oscar", "best.actor", "best.actress", "best.director")
osc
#
oscar_in_cast <- flm2 %>% filter(oscar == "yes") %>% arrange(imdb_rating) %>% select(title) %>% data.frame() %>% head(6)
x1 <- ggplot(data = flm2, aes(y = imdb_rating, x = critics_score, colour = oscar)) + geom_point() + scale_colour_discrete(name="Combined") + scale_fill_hue(name="Combined")
x2 <- ggplot(data = flm2, aes(y = imdb_rating, x = critics_score, colour = best_actor_win)) + geom_point() + scale_colour_discrete(name="Actor") + scale_fill_hue(name="Actor")
x3 <- ggplot(data = flm2, aes(y = imdb_rating, x = critics_score, colour = best_actress_win)) + geom_point() + scale_colour_discrete(name="Actress") + scale_fill_hue(name="Actress")
x4 <- ggplot(data = flm2, aes(y = imdb_rating, x = critics_score, colour = best_dir_win)) + geom_point() + scale_colour_discrete(name="Director") + scale_fill_hue(name="Director")
grid.arrange(x1, x2, x3, x4, nrow = 1, ncol = 4)
#
nom <- table(flm2$best_pic_nom)
win <- table(flm2$best_pic_win)
flm2 <- flm2 %>% mutate(oscar_nom_win = ifelse(best_pic_nom == "yes" | best_pic_win == "yes", "yes", "no"))
nom_win <- table(flm2$oscar_nom_win)
comb_nom_win <- rbind(nom_win, nom, win)
rownames(comb_nom_win) <- c("combined", "nominations", "wins")
comb_nom_win
#
w1 <- ggplot(data = flm2, aes(y = imdb_rating, x = critics_score, colour = oscar_nom_win)) + geom_point()
w2 <- ggplot(data = flm2, aes(y = imdb_rating, x = critics_score, colour = best_pic_nom)) + geom_point()
w3 <- ggplot(data = flm2, aes(y = imdb_rating, x = critics_score, colour = best_pic_win)) + geom_point()
grid.arrange(w1, w2, w3, nrow = 1, ncol = 3)
outlier_best_pic_nom <- flm2 %>% filter(best_pic_nom == "yes") %>% arrange(imdb_rating) %>% data.frame() %>% head(1)
#
g1 <- ggplot(data = flm2, aes(x = thtr_rel_year)) + geom_histogram(colour = "black", fill = "orange", alpha = 0.5)
g2 <- ggplot(data = flm2, aes(x = thtr_rel_month)) + geom_histogram(colour = "black", fill = "blue", alpha = 0.5)
g3 <- ggplot(data = flm2, aes(x = thtr_rel_day)) + geom_histogram(colour = "black", fill = "green", alpha = 0.5)
g4 <- ggplot(data = flm2, aes(y = imdb_rating, x = critics_score, colour = factor(thtr_rel_year))) + geom_point()
g5 <- ggplot(data = flm2, aes(y = imdb_rating, x = critics_score, colour = factor(thtr_rel_month))) + geom_point()
g6 <- ggplot(data = movies, aes(y = imdb_rating, x = critics_score, colour = factor(thtr_rel_day))) + geom_point()
grid.arrange(g1, g2, g3, g4, g5, g6, nrow = 2, ncol = 3)
#
g7 <- ggplot(data = flm2, aes(x = dvd_rel_year)) + geom_histogram(colour = "black", fill = "orange", alpha = 0.5)
g8 <- ggplot(data = flm2, aes(x = dvd_rel_month)) + geom_histogram(colour = "black", fill = "blue", alpha = 0.5)
g9 <- ggplot(data = flm2, aes(x = dvd_rel_day)) + geom_histogram(colour = "black", fill = "green", alpha = 0.5)
g10 <-ggplot(data = flm2, aes(y = imdb_rating, x = critics_score, colour = factor(dvd_rel_year))) + geom_point()
g11 <- ggplot(data = movies, aes(y = imdb_rating, x = critics_score, colour = factor(dvd_rel_month))) + geom_point()
g12 <- ggplot(data = flm2, aes(y = imdb_rating, x = critics_score, colour = factor(dvd_rel_day))) + geom_point()
grid.arrange(g7, g8, g9, g10, g11, g12 ,nrow = 2, ncol = 3)
#
num_var <- flm2 %>% select(imdb_rating,imdb_num_votes, critics_score,audience_score)
ggcorr(num_var, name = "Correlation", label = TRUE, alpha = TRUE, palette = "PuOr") + ggtitle("correlation matrix plot") + theme_dark()
fit1 <- lm(imdb_rating ~ audience_score, data = flm2)
#
fit2 <- lm(imdb_rating ~ audience_score + critics_score, data = flm2)
summary(fit2)
fit3 <- lm(imdb_rating ~ audience_score + critics_score + imdb_num_votes, data = flm2)
#
fit4 <- lm(imdb_rating ~ audience_score + critics_score + oscar, data = flm2)
summary(fit4)
#
t1 <-  ggplot(data = flm2, aes(x = audience_score, y = resid(fit4))) + geom_hline(yintercept = 0, size = 1)  + xlab("audience_score") + ylab("Residual") + geom_point()
t2 <-  ggplot(data = flm2, aes(x = critics_score, y = resid(fit4))) + geom_hline(yintercept = 0, size = 2)  + xlab("critics_score") + ylab("Residual") + geom_point()
grid.arrange(t1, t2, nrow = 1, ncol = 2)
#
par(mfrow = c(1,3))
hist(fit4$residuals, breaks = 25, main = "Histogram of Residuals", col = "blue", border = "pink", prob = TRUE)
curve(dnorm(x, mean = mean(fit4$residuals), sd = sd(fit4$residuals)), col="red", add=T, lwd = 3)
qqnorm(fit4$residuals)
qqline(fit4$residuals)
plot(fit4$residuals, main = "Plot of Residuals VS order of Observations")
#
t3 <- ggplot(data.frame(x = fit4$fitted.values, y = resid(fit4)), aes(x=x, y=y)) + geom_hline(yintercept = 0, size = 1)  + xlab("fitted.values") + ylab("Residual") + geom_point()
t4 <- ggplot(data.frame(x =fit4$fitted.values, y = abs(resid(fit4))), aes(x=x, y=y)) + geom_hline(yintercept = 0, size = 1)  + xlab("fitted.values") + ylab("Residual") + geom_point()
grid.arrange(t3, t4, nrow = 1, ncol = 2)
#
p_genrerun <- ggplot(movies, aes(x=factor(genre), y=runtime)) +
geom_boxplot() + theme(axis.text.x = element_text(angle = 45, hjust = 1))
p_genrerun + ggtitle("Genre to runtime") + geom_hline(yintercept =median(movies$runtime, na.rm = TRUE), col = "royalblue",lwd = 1)
#
p_genreimdb <- ggplot(movies, aes(x=factor(genre), y=imdb_rating)) +
geom_boxplot() + theme(axis.text.x = element_text(angle = 45, hjust = 1))
p_genreimdb + ggtitle("Genre to IMDB rating") + geom_hline(yintercept =median(movies$imdb_rating, na.rm = TRUE), col = "royalblue",lwd = 1)
#
plot(movies$imdb_rating,movies$runtime, main="IMDB rating to runtime", xlab = "IMDB rating", ylab="Runtime in minutes")
abline(lm(movies$runtime~movies$imdb_rating),col = "royalblue",lwd = 1)
#
ggplot(data = movies, aes(x = critics_score, y = audience_score)) +
geom_jitter() +  geom_smooth(method = "lm", se = FALSE) + ggtitle("Critics score to audience score - Rotten")
#
ggplot(data = movies, aes(x = imdb_rating, y = audience_score)) +
geom_jitter() +  geom_smooth(method = "lm", se = FALSE) + ggtitle("Critics score to audience score - IMDB")
#
ggplot(data = movies, aes(x = critics_score, y = imdb_rating)) +
geom_jitter() +  geom_smooth(method = "lm", se = FALSE) + ggtitle("IMDB vs. Rotten")
#
regres <- lm(movies$audience_score ~ movies$critics_score + movies$imdb_rating)
summary(regres)
#
reg <- lm( movies$critics_score ~ movies$imdb_rating)
summary(reg)
#
model <- lm(audience_score ~ critics_score, data=movies) #funny thing, if you will not use "data=" you will not be able to get predict() to work properly
par(mfrow=c(2,2)) #combine plots to 2x2 table
hist(model$residuals, main="residuals")
qqnorm(model$residuals)
qqline(model$residuals)
plot(model$residuals ~ model$fitted)
summary(model)
#Prediction-1
film <- data.frame(title ="Disaster Movie", critics_score = 1)
predict(model, film, interval = "prediction", level = 0.95)
#Prediction-2
film2 <- data.frame(title ="Hellraiser - Bloodline", critics_score = 25)
predict(model, film2, interval = "prediction", level = 0.95)
save.image("F:/Rsoftware/New/movie24.RData")
savehistory("F:/Rsoftware/New/movie_24.Rhistory")
